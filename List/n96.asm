
;CodeVisionAVR C Compiler V2.05.3 Standard
;(C) Copyright 1998-2011 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com

;Chip type                : ATmega32A
;Program type             : Application
;Clock frequency          : 8.000000 MHz
;Memory model             : Small
;Optimize for             : Size
;(s)printf features       : int, width
;(s)scanf features        : int, width
;External RAM size        : 0
;Data Stack size          : 512 byte(s)
;Heap size                : 0 byte(s)
;Promote 'char' to 'int'  : Yes
;'char' is unsigned       : Yes
;8 bit enums              : Yes
;Global 'const' stored in FLASH     : No
;Enhanced function parameter passing: Yes
;Enhanced core instructions         : On
;Smart register allocation          : On
;Automatic register allocation      : On

	#pragma AVRPART ADMIN PART_NAME ATmega32A
	#pragma AVRPART MEMORY PROG_FLASH 32768
	#pragma AVRPART MEMORY EEPROM 1024
	#pragma AVRPART MEMORY INT_SRAM SIZE 2143
	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60

	#define CALL_SUPPORTED 1

	.LISTMAC
	.EQU UDRE=0x5
	.EQU RXC=0x7
	.EQU USR=0xB
	.EQU UDR=0xC
	.EQU SPSR=0xE
	.EQU SPDR=0xF
	.EQU EERE=0x0
	.EQU EEWE=0x1
	.EQU EEMWE=0x2
	.EQU EECR=0x1C
	.EQU EEDR=0x1D
	.EQU EEARL=0x1E
	.EQU EEARH=0x1F
	.EQU WDTCR=0x21
	.EQU MCUCR=0x35
	.EQU SPL=0x3D
	.EQU SPH=0x3E
	.EQU SREG=0x3F

	.DEF R0X0=R0
	.DEF R0X1=R1
	.DEF R0X2=R2
	.DEF R0X3=R3
	.DEF R0X4=R4
	.DEF R0X5=R5
	.DEF R0X6=R6
	.DEF R0X7=R7
	.DEF R0X8=R8
	.DEF R0X9=R9
	.DEF R0XA=R10
	.DEF R0XB=R11
	.DEF R0XC=R12
	.DEF R0XD=R13
	.DEF R0XE=R14
	.DEF R0XF=R15
	.DEF R0X10=R16
	.DEF R0X11=R17
	.DEF R0X12=R18
	.DEF R0X13=R19
	.DEF R0X14=R20
	.DEF R0X15=R21
	.DEF R0X16=R22
	.DEF R0X17=R23
	.DEF R0X18=R24
	.DEF R0X19=R25
	.DEF R0X1A=R26
	.DEF R0X1B=R27
	.DEF R0X1C=R28
	.DEF R0X1D=R29
	.DEF R0X1E=R30
	.DEF R0X1F=R31

	.EQU __SRAM_START=0x0060
	.EQU __SRAM_END=0x085F
	.EQU __DSTACK_SIZE=0x0200
	.EQU __HEAP_SIZE=0x0000
	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1

	.MACRO __CPD1N
	CPI  R30,LOW(@0)
	LDI  R26,HIGH(@0)
	CPC  R31,R26
	LDI  R26,BYTE3(@0)
	CPC  R22,R26
	LDI  R26,BYTE4(@0)
	CPC  R23,R26
	.ENDM

	.MACRO __CPD2N
	CPI  R26,LOW(@0)
	LDI  R30,HIGH(@0)
	CPC  R27,R30
	LDI  R30,BYTE3(@0)
	CPC  R24,R30
	LDI  R30,BYTE4(@0)
	CPC  R25,R30
	.ENDM

	.MACRO __CPWRR
	CP   R@0,R@2
	CPC  R@1,R@3
	.ENDM

	.MACRO __CPWRN
	CPI  R@0,LOW(@2)
	LDI  R30,HIGH(@2)
	CPC  R@1,R30
	.ENDM

	.MACRO __ADDB1MN
	SUBI R30,LOW(-@0-(@1))
	.ENDM

	.MACRO __ADDB2MN
	SUBI R26,LOW(-@0-(@1))
	.ENDM

	.MACRO __ADDW1MN
	SUBI R30,LOW(-@0-(@1))
	SBCI R31,HIGH(-@0-(@1))
	.ENDM

	.MACRO __ADDW2MN
	SUBI R26,LOW(-@0-(@1))
	SBCI R27,HIGH(-@0-(@1))
	.ENDM

	.MACRO __ADDW1FN
	SUBI R30,LOW(-2*@0-(@1))
	SBCI R31,HIGH(-2*@0-(@1))
	.ENDM

	.MACRO __ADDD1FN
	SUBI R30,LOW(-2*@0-(@1))
	SBCI R31,HIGH(-2*@0-(@1))
	SBCI R22,BYTE3(-2*@0-(@1))
	.ENDM

	.MACRO __ADDD1N
	SUBI R30,LOW(-@0)
	SBCI R31,HIGH(-@0)
	SBCI R22,BYTE3(-@0)
	SBCI R23,BYTE4(-@0)
	.ENDM

	.MACRO __ADDD2N
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	SBCI R24,BYTE3(-@0)
	SBCI R25,BYTE4(-@0)
	.ENDM

	.MACRO __SUBD1N
	SUBI R30,LOW(@0)
	SBCI R31,HIGH(@0)
	SBCI R22,BYTE3(@0)
	SBCI R23,BYTE4(@0)
	.ENDM

	.MACRO __SUBD2N
	SUBI R26,LOW(@0)
	SBCI R27,HIGH(@0)
	SBCI R24,BYTE3(@0)
	SBCI R25,BYTE4(@0)
	.ENDM

	.MACRO __ANDBMNN
	LDS  R30,@0+(@1)
	ANDI R30,LOW(@2)
	STS  @0+(@1),R30
	.ENDM

	.MACRO __ANDWMNN
	LDS  R30,@0+(@1)
	ANDI R30,LOW(@2)
	STS  @0+(@1),R30
	LDS  R30,@0+(@1)+1
	ANDI R30,HIGH(@2)
	STS  @0+(@1)+1,R30
	.ENDM

	.MACRO __ANDD1N
	ANDI R30,LOW(@0)
	ANDI R31,HIGH(@0)
	ANDI R22,BYTE3(@0)
	ANDI R23,BYTE4(@0)
	.ENDM

	.MACRO __ANDD2N
	ANDI R26,LOW(@0)
	ANDI R27,HIGH(@0)
	ANDI R24,BYTE3(@0)
	ANDI R25,BYTE4(@0)
	.ENDM

	.MACRO __ORBMNN
	LDS  R30,@0+(@1)
	ORI  R30,LOW(@2)
	STS  @0+(@1),R30
	.ENDM

	.MACRO __ORWMNN
	LDS  R30,@0+(@1)
	ORI  R30,LOW(@2)
	STS  @0+(@1),R30
	LDS  R30,@0+(@1)+1
	ORI  R30,HIGH(@2)
	STS  @0+(@1)+1,R30
	.ENDM

	.MACRO __ORD1N
	ORI  R30,LOW(@0)
	ORI  R31,HIGH(@0)
	ORI  R22,BYTE3(@0)
	ORI  R23,BYTE4(@0)
	.ENDM

	.MACRO __ORD2N
	ORI  R26,LOW(@0)
	ORI  R27,HIGH(@0)
	ORI  R24,BYTE3(@0)
	ORI  R25,BYTE4(@0)
	.ENDM

	.MACRO __DELAY_USB
	LDI  R24,LOW(@0)
__DELAY_USB_LOOP:
	DEC  R24
	BRNE __DELAY_USB_LOOP
	.ENDM

	.MACRO __DELAY_USW
	LDI  R24,LOW(@0)
	LDI  R25,HIGH(@0)
__DELAY_USW_LOOP:
	SBIW R24,1
	BRNE __DELAY_USW_LOOP
	.ENDM

	.MACRO __GETD1S
	LDD  R30,Y+@0
	LDD  R31,Y+@0+1
	LDD  R22,Y+@0+2
	LDD  R23,Y+@0+3
	.ENDM

	.MACRO __GETD2S
	LDD  R26,Y+@0
	LDD  R27,Y+@0+1
	LDD  R24,Y+@0+2
	LDD  R25,Y+@0+3
	.ENDM

	.MACRO __PUTD1S
	STD  Y+@0,R30
	STD  Y+@0+1,R31
	STD  Y+@0+2,R22
	STD  Y+@0+3,R23
	.ENDM

	.MACRO __PUTD2S
	STD  Y+@0,R26
	STD  Y+@0+1,R27
	STD  Y+@0+2,R24
	STD  Y+@0+3,R25
	.ENDM

	.MACRO __PUTDZ2
	STD  Z+@0,R26
	STD  Z+@0+1,R27
	STD  Z+@0+2,R24
	STD  Z+@0+3,R25
	.ENDM

	.MACRO __CLRD1S
	STD  Y+@0,R30
	STD  Y+@0+1,R30
	STD  Y+@0+2,R30
	STD  Y+@0+3,R30
	.ENDM

	.MACRO __POINTB1MN
	LDI  R30,LOW(@0+(@1))
	.ENDM

	.MACRO __POINTW1MN
	LDI  R30,LOW(@0+(@1))
	LDI  R31,HIGH(@0+(@1))
	.ENDM

	.MACRO __POINTD1M
	LDI  R30,LOW(@0)
	LDI  R31,HIGH(@0)
	LDI  R22,BYTE3(@0)
	LDI  R23,BYTE4(@0)
	.ENDM

	.MACRO __POINTW1FN
	LDI  R30,LOW(2*@0+(@1))
	LDI  R31,HIGH(2*@0+(@1))
	.ENDM

	.MACRO __POINTD1FN
	LDI  R30,LOW(2*@0+(@1))
	LDI  R31,HIGH(2*@0+(@1))
	LDI  R22,BYTE3(2*@0+(@1))
	LDI  R23,BYTE4(2*@0+(@1))
	.ENDM

	.MACRO __POINTB2MN
	LDI  R26,LOW(@0+(@1))
	.ENDM

	.MACRO __POINTW2MN
	LDI  R26,LOW(@0+(@1))
	LDI  R27,HIGH(@0+(@1))
	.ENDM

	.MACRO __POINTW2FN
	LDI  R26,LOW(2*@0+(@1))
	LDI  R27,HIGH(2*@0+(@1))
	.ENDM

	.MACRO __POINTD2FN
	LDI  R26,LOW(2*@0+(@1))
	LDI  R27,HIGH(2*@0+(@1))
	LDI  R24,BYTE3(2*@0+(@1))
	LDI  R25,BYTE4(2*@0+(@1))
	.ENDM

	.MACRO __POINTBRM
	LDI  R@0,LOW(@1)
	.ENDM

	.MACRO __POINTWRM
	LDI  R@0,LOW(@2)
	LDI  R@1,HIGH(@2)
	.ENDM

	.MACRO __POINTBRMN
	LDI  R@0,LOW(@1+(@2))
	.ENDM

	.MACRO __POINTWRMN
	LDI  R@0,LOW(@2+(@3))
	LDI  R@1,HIGH(@2+(@3))
	.ENDM

	.MACRO __POINTWRFN
	LDI  R@0,LOW(@2*2+(@3))
	LDI  R@1,HIGH(@2*2+(@3))
	.ENDM

	.MACRO __GETD1N
	LDI  R30,LOW(@0)
	LDI  R31,HIGH(@0)
	LDI  R22,BYTE3(@0)
	LDI  R23,BYTE4(@0)
	.ENDM

	.MACRO __GETD2N
	LDI  R26,LOW(@0)
	LDI  R27,HIGH(@0)
	LDI  R24,BYTE3(@0)
	LDI  R25,BYTE4(@0)
	.ENDM

	.MACRO __GETB1MN
	LDS  R30,@0+(@1)
	.ENDM

	.MACRO __GETB1HMN
	LDS  R31,@0+(@1)
	.ENDM

	.MACRO __GETW1MN
	LDS  R30,@0+(@1)
	LDS  R31,@0+(@1)+1
	.ENDM

	.MACRO __GETD1MN
	LDS  R30,@0+(@1)
	LDS  R31,@0+(@1)+1
	LDS  R22,@0+(@1)+2
	LDS  R23,@0+(@1)+3
	.ENDM

	.MACRO __GETBRMN
	LDS  R@0,@1+(@2)
	.ENDM

	.MACRO __GETWRMN
	LDS  R@0,@2+(@3)
	LDS  R@1,@2+(@3)+1
	.ENDM

	.MACRO __GETWRZ
	LDD  R@0,Z+@2
	LDD  R@1,Z+@2+1
	.ENDM

	.MACRO __GETD2Z
	LDD  R26,Z+@0
	LDD  R27,Z+@0+1
	LDD  R24,Z+@0+2
	LDD  R25,Z+@0+3
	.ENDM

	.MACRO __GETB2MN
	LDS  R26,@0+(@1)
	.ENDM

	.MACRO __GETW2MN
	LDS  R26,@0+(@1)
	LDS  R27,@0+(@1)+1
	.ENDM

	.MACRO __GETD2MN
	LDS  R26,@0+(@1)
	LDS  R27,@0+(@1)+1
	LDS  R24,@0+(@1)+2
	LDS  R25,@0+(@1)+3
	.ENDM

	.MACRO __PUTB1MN
	STS  @0+(@1),R30
	.ENDM

	.MACRO __PUTW1MN
	STS  @0+(@1),R30
	STS  @0+(@1)+1,R31
	.ENDM

	.MACRO __PUTD1MN
	STS  @0+(@1),R30
	STS  @0+(@1)+1,R31
	STS  @0+(@1)+2,R22
	STS  @0+(@1)+3,R23
	.ENDM

	.MACRO __PUTB1EN
	LDI  R26,LOW(@0+(@1))
	LDI  R27,HIGH(@0+(@1))
	CALL __EEPROMWRB
	.ENDM

	.MACRO __PUTW1EN
	LDI  R26,LOW(@0+(@1))
	LDI  R27,HIGH(@0+(@1))
	CALL __EEPROMWRW
	.ENDM

	.MACRO __PUTD1EN
	LDI  R26,LOW(@0+(@1))
	LDI  R27,HIGH(@0+(@1))
	CALL __EEPROMWRD
	.ENDM

	.MACRO __PUTBR0MN
	STS  @0+(@1),R0
	.ENDM

	.MACRO __PUTBMRN
	STS  @0+(@1),R@2
	.ENDM

	.MACRO __PUTWMRN
	STS  @0+(@1),R@2
	STS  @0+(@1)+1,R@3
	.ENDM

	.MACRO __PUTBZR
	STD  Z+@1,R@0
	.ENDM

	.MACRO __PUTWZR
	STD  Z+@2,R@0
	STD  Z+@2+1,R@1
	.ENDM

	.MACRO __GETW1R
	MOV  R30,R@0
	MOV  R31,R@1
	.ENDM

	.MACRO __GETW2R
	MOV  R26,R@0
	MOV  R27,R@1
	.ENDM

	.MACRO __GETWRN
	LDI  R@0,LOW(@2)
	LDI  R@1,HIGH(@2)
	.ENDM

	.MACRO __PUTW1R
	MOV  R@0,R30
	MOV  R@1,R31
	.ENDM

	.MACRO __PUTW2R
	MOV  R@0,R26
	MOV  R@1,R27
	.ENDM

	.MACRO __ADDWRN
	SUBI R@0,LOW(-@2)
	SBCI R@1,HIGH(-@2)
	.ENDM

	.MACRO __ADDWRR
	ADD  R@0,R@2
	ADC  R@1,R@3
	.ENDM

	.MACRO __SUBWRN
	SUBI R@0,LOW(@2)
	SBCI R@1,HIGH(@2)
	.ENDM

	.MACRO __SUBWRR
	SUB  R@0,R@2
	SBC  R@1,R@3
	.ENDM

	.MACRO __ANDWRN
	ANDI R@0,LOW(@2)
	ANDI R@1,HIGH(@2)
	.ENDM

	.MACRO __ANDWRR
	AND  R@0,R@2
	AND  R@1,R@3
	.ENDM

	.MACRO __ORWRN
	ORI  R@0,LOW(@2)
	ORI  R@1,HIGH(@2)
	.ENDM

	.MACRO __ORWRR
	OR   R@0,R@2
	OR   R@1,R@3
	.ENDM

	.MACRO __EORWRR
	EOR  R@0,R@2
	EOR  R@1,R@3
	.ENDM

	.MACRO __GETWRS
	LDD  R@0,Y+@2
	LDD  R@1,Y+@2+1
	.ENDM

	.MACRO __PUTBSR
	STD  Y+@1,R@0
	.ENDM

	.MACRO __PUTWSR
	STD  Y+@2,R@0
	STD  Y+@2+1,R@1
	.ENDM

	.MACRO __MOVEWRR
	MOV  R@0,R@2
	MOV  R@1,R@3
	.ENDM

	.MACRO __INWR
	IN   R@0,@2
	IN   R@1,@2+1
	.ENDM

	.MACRO __OUTWR
	OUT  @2+1,R@1
	OUT  @2,R@0
	.ENDM

	.MACRO __CALL1MN
	LDS  R30,@0+(@1)
	LDS  R31,@0+(@1)+1
	ICALL
	.ENDM

	.MACRO __CALL1FN
	LDI  R30,LOW(2*@0+(@1))
	LDI  R31,HIGH(2*@0+(@1))
	CALL __GETW1PF
	ICALL
	.ENDM

	.MACRO __CALL2EN
	LDI  R26,LOW(@0+(@1))
	LDI  R27,HIGH(@0+(@1))
	CALL __EEPROMRDW
	ICALL
	.ENDM

	.MACRO __GETW1STACK
	IN   R26,SPL
	IN   R27,SPH
	ADIW R26,@0+1
	LD   R30,X+
	LD   R31,X
	.ENDM

	.MACRO __GETD1STACK
	IN   R26,SPL
	IN   R27,SPH
	ADIW R26,@0+1
	LD   R30,X+
	LD   R31,X+
	LD   R22,X
	.ENDM

	.MACRO __NBST
	BST  R@0,@1
	IN   R30,SREG
	LDI  R31,0x40
	EOR  R30,R31
	OUT  SREG,R30
	.ENDM


	.MACRO __PUTB1SN
	LDD  R26,Y+@0
	LDD  R27,Y+@0+1
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	ST   X,R30
	.ENDM

	.MACRO __PUTW1SN
	LDD  R26,Y+@0
	LDD  R27,Y+@0+1
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	ST   X+,R30
	ST   X,R31
	.ENDM

	.MACRO __PUTD1SN
	LDD  R26,Y+@0
	LDD  R27,Y+@0+1
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	CALL __PUTDP1
	.ENDM

	.MACRO __PUTB1SNS
	LDD  R26,Y+@0
	LDD  R27,Y+@0+1
	ADIW R26,@1
	ST   X,R30
	.ENDM

	.MACRO __PUTW1SNS
	LDD  R26,Y+@0
	LDD  R27,Y+@0+1
	ADIW R26,@1
	ST   X+,R30
	ST   X,R31
	.ENDM

	.MACRO __PUTD1SNS
	LDD  R26,Y+@0
	LDD  R27,Y+@0+1
	ADIW R26,@1
	CALL __PUTDP1
	.ENDM

	.MACRO __PUTB1PMN
	LDS  R26,@0
	LDS  R27,@0+1
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	ST   X,R30
	.ENDM

	.MACRO __PUTW1PMN
	LDS  R26,@0
	LDS  R27,@0+1
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	ST   X+,R30
	ST   X,R31
	.ENDM

	.MACRO __PUTD1PMN
	LDS  R26,@0
	LDS  R27,@0+1
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	CALL __PUTDP1
	.ENDM

	.MACRO __PUTB1PMNS
	LDS  R26,@0
	LDS  R27,@0+1
	ADIW R26,@1
	ST   X,R30
	.ENDM

	.MACRO __PUTW1PMNS
	LDS  R26,@0
	LDS  R27,@0+1
	ADIW R26,@1
	ST   X+,R30
	ST   X,R31
	.ENDM

	.MACRO __PUTD1PMNS
	LDS  R26,@0
	LDS  R27,@0+1
	ADIW R26,@1
	CALL __PUTDP1
	.ENDM

	.MACRO __PUTB1RN
	MOVW R26,R@0
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	ST   X,R30
	.ENDM

	.MACRO __PUTW1RN
	MOVW R26,R@0
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	ST   X+,R30
	ST   X,R31
	.ENDM

	.MACRO __PUTD1RN
	MOVW R26,R@0
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	CALL __PUTDP1
	.ENDM

	.MACRO __PUTB1RNS
	MOVW R26,R@0
	ADIW R26,@1
	ST   X,R30
	.ENDM

	.MACRO __PUTW1RNS
	MOVW R26,R@0
	ADIW R26,@1
	ST   X+,R30
	ST   X,R31
	.ENDM

	.MACRO __PUTD1RNS
	MOVW R26,R@0
	ADIW R26,@1
	CALL __PUTDP1
	.ENDM

	.MACRO __PUTB1RON
	MOV  R26,R@0
	MOV  R27,R@1
	SUBI R26,LOW(-@2)
	SBCI R27,HIGH(-@2)
	ST   X,R30
	.ENDM

	.MACRO __PUTW1RON
	MOV  R26,R@0
	MOV  R27,R@1
	SUBI R26,LOW(-@2)
	SBCI R27,HIGH(-@2)
	ST   X+,R30
	ST   X,R31
	.ENDM

	.MACRO __PUTD1RON
	MOV  R26,R@0
	MOV  R27,R@1
	SUBI R26,LOW(-@2)
	SBCI R27,HIGH(-@2)
	CALL __PUTDP1
	.ENDM

	.MACRO __PUTB1RONS
	MOV  R26,R@0
	MOV  R27,R@1
	ADIW R26,@2
	ST   X,R30
	.ENDM

	.MACRO __PUTW1RONS
	MOV  R26,R@0
	MOV  R27,R@1
	ADIW R26,@2
	ST   X+,R30
	ST   X,R31
	.ENDM

	.MACRO __PUTD1RONS
	MOV  R26,R@0
	MOV  R27,R@1
	ADIW R26,@2
	CALL __PUTDP1
	.ENDM


	.MACRO __GETB1SX
	MOVW R30,R28
	SUBI R30,LOW(-@0)
	SBCI R31,HIGH(-@0)
	LD   R30,Z
	.ENDM

	.MACRO __GETB1HSX
	MOVW R30,R28
	SUBI R30,LOW(-@0)
	SBCI R31,HIGH(-@0)
	LD   R31,Z
	.ENDM

	.MACRO __GETW1SX
	MOVW R30,R28
	SUBI R30,LOW(-@0)
	SBCI R31,HIGH(-@0)
	LD   R0,Z+
	LD   R31,Z
	MOV  R30,R0
	.ENDM

	.MACRO __GETD1SX
	MOVW R30,R28
	SUBI R30,LOW(-@0)
	SBCI R31,HIGH(-@0)
	LD   R0,Z+
	LD   R1,Z+
	LD   R22,Z+
	LD   R23,Z
	MOVW R30,R0
	.ENDM

	.MACRO __GETB2SX
	MOVW R26,R28
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	LD   R26,X
	.ENDM

	.MACRO __GETW2SX
	MOVW R26,R28
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	LD   R0,X+
	LD   R27,X
	MOV  R26,R0
	.ENDM

	.MACRO __GETD2SX
	MOVW R26,R28
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	LD   R0,X+
	LD   R1,X+
	LD   R24,X+
	LD   R25,X
	MOVW R26,R0
	.ENDM

	.MACRO __GETBRSX
	MOVW R30,R28
	SUBI R30,LOW(-@1)
	SBCI R31,HIGH(-@1)
	LD   R@0,Z
	.ENDM

	.MACRO __GETWRSX
	MOVW R30,R28
	SUBI R30,LOW(-@2)
	SBCI R31,HIGH(-@2)
	LD   R@0,Z+
	LD   R@1,Z
	.ENDM

	.MACRO __GETBRSX2
	MOVW R26,R28
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	LD   R@0,X
	.ENDM

	.MACRO __GETWRSX2
	MOVW R26,R28
	SUBI R26,LOW(-@2)
	SBCI R27,HIGH(-@2)
	LD   R@0,X+
	LD   R@1,X
	.ENDM

	.MACRO __LSLW8SX
	MOVW R30,R28
	SUBI R30,LOW(-@0)
	SBCI R31,HIGH(-@0)
	LD   R31,Z
	CLR  R30
	.ENDM

	.MACRO __PUTB1SX
	MOVW R26,R28
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	ST   X,R30
	.ENDM

	.MACRO __PUTW1SX
	MOVW R26,R28
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	ST   X+,R30
	ST   X,R31
	.ENDM

	.MACRO __PUTD1SX
	MOVW R26,R28
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	ST   X+,R30
	ST   X+,R31
	ST   X+,R22
	ST   X,R23
	.ENDM

	.MACRO __CLRW1SX
	MOVW R26,R28
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	ST   X+,R30
	ST   X,R30
	.ENDM

	.MACRO __CLRD1SX
	MOVW R26,R28
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	ST   X+,R30
	ST   X+,R30
	ST   X+,R30
	ST   X,R30
	.ENDM

	.MACRO __PUTB2SX
	MOVW R30,R28
	SUBI R30,LOW(-@0)
	SBCI R31,HIGH(-@0)
	ST   Z,R26
	.ENDM

	.MACRO __PUTW2SX
	MOVW R30,R28
	SUBI R30,LOW(-@0)
	SBCI R31,HIGH(-@0)
	ST   Z+,R26
	ST   Z,R27
	.ENDM

	.MACRO __PUTD2SX
	MOVW R30,R28
	SUBI R30,LOW(-@0)
	SBCI R31,HIGH(-@0)
	ST   Z+,R26
	ST   Z+,R27
	ST   Z+,R24
	ST   Z,R25
	.ENDM

	.MACRO __PUTBSRX
	MOVW R30,R28
	SUBI R30,LOW(-@1)
	SBCI R31,HIGH(-@1)
	ST   Z,R@0
	.ENDM

	.MACRO __PUTWSRX
	MOVW R30,R28
	SUBI R30,LOW(-@2)
	SBCI R31,HIGH(-@2)
	ST   Z+,R@0
	ST   Z,R@1
	.ENDM

	.MACRO __PUTB1SNX
	MOVW R26,R28
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	LD   R0,X+
	LD   R27,X
	MOV  R26,R0
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	ST   X,R30
	.ENDM

	.MACRO __PUTW1SNX
	MOVW R26,R28
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	LD   R0,X+
	LD   R27,X
	MOV  R26,R0
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	ST   X+,R30
	ST   X,R31
	.ENDM

	.MACRO __PUTD1SNX
	MOVW R26,R28
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	LD   R0,X+
	LD   R27,X
	MOV  R26,R0
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	ST   X+,R30
	ST   X+,R31
	ST   X+,R22
	ST   X,R23
	.ENDM

	.MACRO __MULBRR
	MULS R@0,R@1
	MOVW R30,R0
	.ENDM

	.MACRO __MULBRRU
	MUL  R@0,R@1
	MOVW R30,R0
	.ENDM

	.MACRO __MULBRR0
	MULS R@0,R@1
	.ENDM

	.MACRO __MULBRRU0
	MUL  R@0,R@1
	.ENDM

	.MACRO __MULBNWRU
	LDI  R26,@2
	MUL  R26,R@0
	MOVW R30,R0
	MUL  R26,R@1
	ADD  R31,R0
	.ENDM

;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
	.DEF _x_text=R5
	.DEF _y_text=R4

	.CSEG
	.ORG 0x00

;START OF CODE MARKER
__START_OF_CODE:

;INTERRUPT VECTORS
	JMP  __RESET
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00

_font8x16:
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x18,0x3C,0x3C,0x3C,0x18,0x18
	.DB  0x18,0x0,0x18,0x18,0x0,0x0,0x0,0x0
	.DB  0x0,0x63,0x63,0x63,0x22,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x36,0x36,0x7F,0x36,0x36
	.DB  0x36,0x7F,0x36,0x36,0x0,0x0,0x0,0x0
	.DB  0xC,0xC,0x3E,0x63,0x61,0x60,0x3E,0x3
	.DB  0x3,0x43,0x63,0x3E,0xC,0xC,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x61,0x63,0x6
	.DB  0xC,0x18,0x33,0x63,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x1C,0x36,0x36,0x1C,0x3B
	.DB  0x6E,0x66,0x66,0x3B,0x0,0x0,0x0,0x0
	.DB  0x0,0x30,0x30,0x30,0x60,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0xC,0x18,0x18,0x30,0x30,0x30
	.DB  0x30,0x18,0x18,0xC,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x18,0xC,0xC,0x6,0x6,0x6
	.DB  0x6,0xC,0xC,0x18,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x42,0x66,0x3C,0xFF
	.DB  0x3C,0x66,0x42,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x18,0x18,0x18,0xFF
	.DB  0x18,0x18,0x18,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x18,0x18,0x18,0x30,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xFF
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x18,0x18,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x1,0x3,0x7,0xE,0x1C,0x38
	.DB  0x70,0xE0,0xC0,0x80,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x3E,0x63,0x63,0x63,0x6B,0x6B
	.DB  0x63,0x63,0x63,0x3E,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0xC,0x1C,0x3C,0xC,0xC,0xC
	.DB  0xC,0xC,0xC,0x3F,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x3E,0x63,0x3,0x6,0xC,0x18
	.DB  0x30,0x61,0x63,0x7F,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x3E,0x63,0x3,0x3,0x1E,0x3
	.DB  0x3,0x3,0x63,0x3E,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x6,0xE,0x1E,0x36,0x66,0x66
	.DB  0x7F,0x6,0x6,0xF,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x7F,0x60,0x60,0x60,0x7E,0x3
	.DB  0x3,0x63,0x73,0x3E,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x1C,0x30,0x60,0x60,0x7E,0x63
	.DB  0x63,0x63,0x63,0x3E,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x7F,0x63,0x3,0x6,0x6,0xC
	.DB  0xC,0x18,0x18,0x18,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x3E,0x63,0x63,0x63,0x3E,0x63
	.DB  0x63,0x63,0x63,0x3E,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x3E,0x63,0x63,0x63,0x63,0x3F
	.DB  0x3,0x3,0x6,0x3C,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x18,0x18,0x0
	.DB  0x0,0x0,0x18,0x18,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x18,0x18,0x0
	.DB  0x0,0x0,0x18,0x18,0x18,0x30,0x0,0x0
	.DB  0x0,0x0,0x0,0x6,0xC,0x18,0x30,0x60
	.DB  0x30,0x18,0xC,0x6,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x7E,0x0
	.DB  0x0,0x7E,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x60,0x30,0x18,0xC,0x6
	.DB  0xC,0x18,0x30,0x60,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x3E,0x63,0x63,0x6,0xC,0xC
	.DB  0xC,0x0,0xC,0xC,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x3E,0x63,0x63,0x6F,0x6B,0x6B
	.DB  0x6E,0x60,0x60,0x3E,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x8,0x1C,0x36,0x63,0x63,0x63
	.DB  0x7F,0x63,0x63,0x63,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x7E,0x33,0x33,0x33,0x3E,0x33
	.DB  0x33,0x33,0x33,0x7E,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x1E,0x33,0x61,0x60,0x60,0x60
	.DB  0x60,0x61,0x33,0x1E,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x7C,0x36,0x33,0x33,0x33,0x33
	.DB  0x33,0x33,0x36,0x7C,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x7F,0x33,0x31,0x34,0x3C,0x34
	.DB  0x30,0x31,0x33,0x7F,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x7F,0x33,0x31,0x34,0x3C,0x34
	.DB  0x30,0x30,0x30,0x78,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x1E,0x33,0x61,0x60,0x60,0x6F
	.DB  0x63,0x63,0x37,0x1D,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x63,0x63,0x63,0x63,0x7F,0x63
	.DB  0x63,0x63,0x63,0x63,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x3C,0x18,0x18,0x18,0x18,0x18
	.DB  0x18,0x18,0x18,0x3C,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0xF,0x6,0x6,0x6,0x6,0x6
	.DB  0x6,0x66,0x66,0x3C,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x73,0x33,0x36,0x36,0x3C,0x36
	.DB  0x36,0x33,0x33,0x73,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x78,0x30,0x30,0x30,0x30,0x30
	.DB  0x30,0x31,0x33,0x7F,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x63,0x77,0x7F,0x6B,0x63,0x63
	.DB  0x63,0x63,0x63,0x63,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x63,0x63,0x73,0x7B,0x7F,0x6F
	.DB  0x67,0x63,0x63,0x63,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x1C,0x36,0x63,0x63,0x63,0x63
	.DB  0x63,0x63,0x36,0x1C,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x7E,0x33,0x33,0x33,0x3E,0x30
	.DB  0x30,0x30,0x30,0x78,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x3E,0x63,0x63,0x63,0x63,0x63
	.DB  0x63,0x6B,0x6F,0x3E,0x6,0x7,0x0,0x0
	.DB  0x0,0x0,0x7E,0x33,0x33,0x33,0x3E,0x36
	.DB  0x36,0x33,0x33,0x73,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x3E,0x63,0x63,0x30,0x1C,0x6
	.DB  0x3,0x63,0x63,0x3E,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0xFF,0xDB,0x99,0x18,0x18,0x18
	.DB  0x18,0x18,0x18,0x3C,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x63,0x63,0x63,0x63,0x63,0x63
	.DB  0x63,0x63,0x63,0x3E,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x63,0x63,0x63,0x63,0x63,0x63
	.DB  0x63,0x36,0x1C,0x8,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x63,0x63,0x63,0x63,0x63,0x6B
	.DB  0x6B,0x7F,0x36,0x36,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0xC3,0xC3,0x66,0x3C,0x18,0x18
	.DB  0x3C,0x66,0xC3,0xC3,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0xC3,0xC3,0xC3,0x66,0x3C,0x18
	.DB  0x18,0x18,0x18,0x3C,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x7F,0x63,0x43,0x6,0xC,0x18
	.DB  0x30,0x61,0x63,0x7F,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x3C,0x30,0x30,0x30,0x30,0x30
	.DB  0x30,0x30,0x30,0x3C,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x80,0xC0,0xE0,0x70,0x38,0x1C
	.DB  0xE,0x7,0x3,0x1,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x3C,0xC,0xC,0xC,0xC,0xC
	.DB  0xC,0xC,0xC,0x3C,0x0,0x0,0x0,0x0
	.DB  0x8,0x1C,0x36,0x63,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0xFF,0x0,0x0,0x0
	.DB  0x18,0x18,0xC,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x3C,0x46,0x6
	.DB  0x3E,0x66,0x66,0x3B,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x70,0x30,0x30,0x3C,0x36,0x33
	.DB  0x33,0x33,0x33,0x6E,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x3E,0x63,0x60
	.DB  0x60,0x60,0x63,0x3E,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0xE,0x6,0x6,0x1E,0x36,0x66
	.DB  0x66,0x66,0x66,0x3B,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x3E,0x63,0x63
	.DB  0x7E,0x60,0x63,0x3E,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x1C,0x36,0x32,0x30,0x7C,0x30
	.DB  0x30,0x30,0x30,0x78,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x3B,0x66,0x66
	.DB  0x66,0x66,0x3E,0x6,0x66,0x3C,0x0,0x0
	.DB  0x0,0x0,0x70,0x30,0x30,0x36,0x3B,0x33
	.DB  0x33,0x33,0x33,0x73,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0xC,0xC,0x0,0x1C,0xC,0xC
	.DB  0xC,0xC,0xC,0x1E,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x6,0x6,0x0,0xE,0x6,0x6
	.DB  0x6,0x6,0x6,0x66,0x66,0x3C,0x0,0x0
	.DB  0x0,0x0,0x70,0x30,0x30,0x33,0x33,0x36
	.DB  0x3C,0x36,0x33,0x73,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x1C,0xC,0xC,0xC,0xC,0xC
	.DB  0xC,0xC,0xC,0x1E,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x6E,0x7F,0x6B
	.DB  0x6B,0x6B,0x6B,0x6B,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x6E,0x33,0x33
	.DB  0x33,0x33,0x33,0x33,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x3E,0x63,0x63
	.DB  0x63,0x63,0x63,0x3E,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x6E,0x33,0x33
	.DB  0x33,0x33,0x3E,0x30,0x30,0x78,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x3B,0x66,0x66
	.DB  0x66,0x66,0x3E,0x6,0x6,0xF,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x6E,0x3B,0x33
	.DB  0x30,0x30,0x30,0x78,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x3E,0x63,0x38
	.DB  0xE,0x3,0x63,0x3E,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x8,0x18,0x18,0x7E,0x18,0x18
	.DB  0x18,0x18,0x1B,0xE,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x66,0x66,0x66
	.DB  0x66,0x66,0x66,0x3B,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x63,0x63,0x36
	.DB  0x36,0x1C,0x1C,0x8,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x63,0x63,0x63
	.DB  0x6B,0x6B,0x7F,0x36,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x63,0x36,0x1C
	.DB  0x1C,0x1C,0x36,0x63,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x63,0x63,0x63
	.DB  0x63,0x63,0x3F,0x3,0x6,0x3C,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x7F,0x66,0xC
	.DB  0x18,0x30,0x63,0x7F,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0xE,0x18,0x18,0x18,0x70,0x18
	.DB  0x18,0x18,0x18,0xE,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x18,0x18,0x18,0x18,0x18,0x0
	.DB  0x18,0x18,0x18,0x18,0x18,0x0,0x0,0x0
	.DB  0x0,0x0,0x70,0x18,0x18,0x18,0xE,0x18
	.DB  0x18,0x18,0x18,0x70,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x3B,0x6E,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x70,0xD8,0xD8,0x70,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0

_0x6A:
	.DB  0x0,0x0
_0x0:
	.DB  0x20,0x54,0x46,0x54,0x20,0x4C,0x43,0x44
	.DB  0x20,0x32,0x2E,0x38,0x27,0x20,0x0,0x20
	.DB  0x57,0x57,0x57,0x2E,0x4E,0x41,0x4D,0x49
	.DB  0x4E,0x49,0x43,0x2E,0x43,0x4F,0x4D,0x20
	.DB  0x0

__GLOBAL_INI_TBL:
	.DW  0x02
	.DW  0x04
	.DW  _0x6A*2

_0xFFFFFFFF:
	.DW  0

__RESET:
	CLI
	CLR  R30
	OUT  EECR,R30

;INTERRUPT VECTORS ARE PLACED
;AT THE START OF FLASH
	LDI  R31,1
	OUT  MCUCR,R31
	OUT  MCUCR,R30

;DISABLE WATCHDOG
	LDI  R31,0x18
	OUT  WDTCR,R31
	OUT  WDTCR,R30

;CLEAR R2-R14
	LDI  R24,(14-2)+1
	LDI  R26,2
	CLR  R27
__CLEAR_REG:
	ST   X+,R30
	DEC  R24
	BRNE __CLEAR_REG

;CLEAR SRAM
	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
	LDI  R26,__SRAM_START
__CLEAR_SRAM:
	ST   X+,R30
	SBIW R24,1
	BRNE __CLEAR_SRAM

;GLOBAL VARIABLES INITIALIZATION
	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
__GLOBAL_INI_NEXT:
	LPM  R24,Z+
	LPM  R25,Z+
	SBIW R24,0
	BREQ __GLOBAL_INI_END
	LPM  R26,Z+
	LPM  R27,Z+
	LPM  R0,Z+
	LPM  R1,Z+
	MOVW R22,R30
	MOVW R30,R0
__GLOBAL_INI_LOOP:
	LPM  R0,Z+
	ST   X+,R0
	SBIW R24,1
	BRNE __GLOBAL_INI_LOOP
	MOVW R30,R22
	RJMP __GLOBAL_INI_NEXT
__GLOBAL_INI_END:

;HARDWARE STACK POINTER INITIALIZATION
	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
	OUT  SPL,R30
	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
	OUT  SPH,R30

;DATA STACK POINTER INITIALIZATION
	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)

	JMP  _main

	.ESEG
	.ORG 0

	.DSEG
	.ORG 0x260

	.CSEG
;#include <mega32a.h>
	#ifndef __SLEEP_DEFINED__
	#define __SLEEP_DEFINED__
	.EQU __se_bit=0x80
	.EQU __sm_mask=0x70
	.EQU __sm_powerdown=0x20
	.EQU __sm_powersave=0x30
	.EQU __sm_standby=0x60
	.EQU __sm_ext_standby=0x70
	.EQU __sm_adc_noise_red=0x10
	.SET power_ctrl_reg=mcucr
	#endif
;#include <delay.h>
;#define xtal 8000000
;//================================ LCD CONFIGURATIONS =======================================
; #define PORTRAIT
;
; #define LCD_CONTROLPORT_DDR  DDRD
; #define LCD_CONTROLPORT_PORT PORTD
; #define LCD_CONTROLPORT_PIN  PIND
;
; #define LCD_RST_DDR  DDRD
; #define LCD_RST_PORT PORTD
; #define LCD_RST_PIN  4
;
; #define LCD_RS_DDR  DDRD
; #define LCD_RS_PORT PORTD
; #define LCD_RS_PIN  1
;
; #define LCD_CS_DDR  DDRD
; #define LCD_CS_PORT PORTD
; #define LCD_CS_PIN  0
;
; #define LCD_RD_DDR  DDRD
; #define LCD_RD_PORT PORTD
; #define LCD_RD_PIN  4
;
; #define LCD_WR_DDR  DDRD
; #define LCD_WR_PORT PORTD
; #define LCD_WR_PIN  3
;
; #define LCD_DATAPORT_MSB_DDR   DDRA
; #define LCD_DATAPORT_MSB_PORT  PORTA
; #define LCD_DATAPORT_MSB_PIN   PINA
;
; #define LCD_DATAPORT_LSB_DDR   DDRC
; #define LCD_DATAPORT_LSB_PORT  PORTC
; #define LCD_DATAPORT_LSB_PIN   PINC
;
;
;
; //================================================================
;
;#include "tftlcd_functions.h"

	.CSEG
_lcd_write_index_register:
	ST   -Y,R26
;	ins -> Y+0
	CBI  0x12,0
	CBI  0x12,1
	LDI  R30,LOW(0)
	RCALL SUBOPT_0x0
	ADIW R28,1
	RET
_lcd_write_wdr:
	ST   -Y,R27
	ST   -Y,R26
;	data -> Y+0
	CBI  0x12,0
	SBI  0x12,1
	LD   R30,Y
	LDD  R31,Y+1
	CALL __ASRW8
	RCALL SUBOPT_0x0
	RJMP _0x2000001
_lcd_read_rdr:
	CALL __SAVELOCR6
;	data_lsb -> R16,R17
;	data_msb -> R18,R19
;	rdr_data -> R20,R21
	LDI  R30,LOW(0)
	OUT  0x1B,R30
	OUT  0x15,R30
	OUT  0x1A,R30
	OUT  0x14,R30
	CBI  0x12,4
	SBI  0x12,3
	CBI  0x12,0
	IN   R16,19
	CLR  R17
	IN   R18,25
	CLR  R19
	MOV  R31,R18
	LDI  R30,LOW(0)
	OR   R30,R16
	OR   R31,R17
	MOVW R20,R30
	SBI  0x12,0
	SBI  0x12,4
	SBI  0x12,3
	LDI  R30,LOW(255)
	OUT  0x1A,R30
	OUT  0x14,R30
	MOVW R30,R20
	CALL __LOADLOCR6
	RJMP _0x2000002
_lcd_clear_screen:
	RCALL SUBOPT_0x1
;	counter -> Y+0
_0x24:
	RCALL SUBOPT_0x2
	BRSH _0x25
	LDI  R26,LOW(65535)
	LDI  R27,HIGH(65535)
	RCALL _lcd_write_wdr
	RCALL SUBOPT_0x3
	RJMP _0x24
_0x25:
	ADIW R28,4
	RET
_lcd_background_color:
	ST   -Y,R27
	ST   -Y,R26
	RCALL SUBOPT_0x1
;	color -> Y+4
;	counter -> Y+0
_0x27:
	RCALL SUBOPT_0x2
	BRSH _0x28
	RCALL SUBOPT_0x4
	RCALL SUBOPT_0x3
	RJMP _0x27
_0x28:
	RJMP _0x2000002
_lcd_init:
	LDI  R30,LOW(27)
	OUT  0x12,R30
	OUT  0x11,R30
	LDI  R30,LOW(255)
	OUT  0x1A,R30
	OUT  0x14,R30
	CBI  0x12,4
	RCALL SUBOPT_0x5
	CALL _delay_ms
	SBI  0x12,4
	LDI  R26,LOW(227)
	RCALL _lcd_write_index_register
	LDI  R26,LOW(12296)
	LDI  R27,HIGH(12296)
	RCALL _lcd_write_wdr
	LDI  R26,LOW(231)
	RCALL _lcd_write_index_register
	LDI  R26,LOW(18)
	RCALL SUBOPT_0x6
	LDI  R26,LOW(239)
	RCALL _lcd_write_index_register
	LDI  R26,LOW(4657)
	LDI  R27,HIGH(4657)
	RCALL _lcd_write_wdr
	LDI  R26,LOW(0)
	RCALL _lcd_write_index_register
	RCALL SUBOPT_0x5
	RCALL _lcd_write_wdr
	RCALL SUBOPT_0x7
	LDI  R26,LOW(1)
	RCALL _lcd_write_index_register
	LDI  R26,LOW(256)
	LDI  R27,HIGH(256)
	RCALL _lcd_write_wdr
	LDI  R26,LOW(2)
	RCALL SUBOPT_0x8
	LDI  R26,LOW(3)
	RCALL _lcd_write_index_register
	LDI  R26,LOW(48)
	RCALL SUBOPT_0x6
	LDI  R26,LOW(4)
	RCALL SUBOPT_0x9
	LDI  R26,LOW(8)
	RCALL _lcd_write_index_register
	LDI  R26,LOW(514)
	LDI  R27,HIGH(514)
	RCALL _lcd_write_wdr
	LDI  R26,LOW(9)
	RCALL SUBOPT_0x9
	LDI  R26,LOW(10)
	RCALL SUBOPT_0x9
	LDI  R26,LOW(12)
	RCALL SUBOPT_0x9
	LDI  R26,LOW(13)
	RCALL SUBOPT_0x9
	LDI  R26,LOW(15)
	RCALL SUBOPT_0x9
	LDI  R26,LOW(16)
	RCALL SUBOPT_0x9
	RCALL SUBOPT_0xA
	LDI  R26,LOW(18)
	RCALL SUBOPT_0x9
	LDI  R26,LOW(19)
	RCALL SUBOPT_0x9
	LDI  R26,LOW(200)
	LDI  R27,0
	CALL _delay_ms
	LDI  R26,LOW(16)
	RCALL _lcd_write_index_register
	LDI  R26,LOW(5776)
	LDI  R27,HIGH(5776)
	RCALL _lcd_write_wdr
	RCALL SUBOPT_0xA
	RCALL SUBOPT_0x7
	LDI  R26,LOW(18)
	RCALL _lcd_write_index_register
	LDI  R26,LOW(26)
	RCALL SUBOPT_0x6
	RCALL SUBOPT_0x7
	LDI  R26,LOW(19)
	RCALL _lcd_write_index_register
	LDI  R26,LOW(6144)
	LDI  R27,HIGH(6144)
	RCALL _lcd_write_wdr
	LDI  R26,LOW(41)
	RCALL _lcd_write_index_register
	LDI  R26,LOW(42)
	RCALL SUBOPT_0x6
	RCALL SUBOPT_0x7
	LDI  R26,LOW(32)
	RCALL SUBOPT_0x9
	LDI  R26,LOW(33)
	RCALL SUBOPT_0x9
	LDI  R26,LOW(48)
	RCALL SUBOPT_0x9
	LDI  R26,LOW(49)
	RCALL SUBOPT_0x9
	LDI  R26,LOW(50)
	RCALL SUBOPT_0x9
	LDI  R26,LOW(53)
	RCALL SUBOPT_0x9
	LDI  R26,LOW(54)
	RCALL SUBOPT_0x9
	LDI  R26,LOW(55)
	RCALL _lcd_write_index_register
	LDI  R26,LOW(1030)
	LDI  R27,HIGH(1030)
	RCALL _lcd_write_wdr
	LDI  R26,LOW(56)
	RCALL _lcd_write_index_register
	LDI  R26,LOW(6)
	RCALL SUBOPT_0x6
	LDI  R26,LOW(57)
	RCALL _lcd_write_index_register
	LDI  R26,LOW(1028)
	LDI  R27,HIGH(1028)
	RCALL _lcd_write_wdr
	LDI  R26,LOW(60)
	RCALL SUBOPT_0x8
	LDI  R26,LOW(61)
	RCALL _lcd_write_index_register
	LDI  R26,LOW(2568)
	LDI  R27,HIGH(2568)
	RCALL _lcd_write_wdr
	LDI  R26,LOW(80)
	RCALL SUBOPT_0x9
	LDI  R26,LOW(81)
	RCALL _lcd_write_index_register
	LDI  R26,LOW(239)
	RCALL SUBOPT_0x6
	LDI  R26,LOW(82)
	RCALL SUBOPT_0x9
	LDI  R26,LOW(83)
	RCALL _lcd_write_index_register
	LDI  R26,LOW(319)
	LDI  R27,HIGH(319)
	RCALL _lcd_write_wdr
	LDI  R26,LOW(96)
	RCALL _lcd_write_index_register
	LDI  R26,LOW(42752)
	LDI  R27,HIGH(42752)
	RCALL _lcd_write_wdr
	LDI  R26,LOW(97)
	RCALL _lcd_write_index_register
	RCALL SUBOPT_0x5
	RCALL _lcd_write_wdr
	LDI  R26,LOW(106)
	RCALL SUBOPT_0x9
	LDI  R26,LOW(128)
	RCALL SUBOPT_0x9
	LDI  R26,LOW(129)
	RCALL SUBOPT_0x9
	LDI  R26,LOW(130)
	RCALL SUBOPT_0x9
	LDI  R26,LOW(131)
	RCALL SUBOPT_0x9
	LDI  R26,LOW(132)
	RCALL SUBOPT_0x9
	LDI  R26,LOW(133)
	RCALL SUBOPT_0x9
	LDI  R26,LOW(144)
	RCALL _lcd_write_index_register
	LDI  R26,LOW(16)
	RCALL SUBOPT_0x6
	LDI  R26,LOW(146)
	RCALL SUBOPT_0x9
	LDI  R26,LOW(147)
	RCALL _lcd_write_index_register
	LDI  R26,LOW(3)
	RCALL SUBOPT_0x6
	LDI  R26,LOW(149)
	RCALL _lcd_write_index_register
	LDI  R26,LOW(272)
	LDI  R27,HIGH(272)
	RCALL _lcd_write_wdr
	LDI  R26,LOW(151)
	RCALL SUBOPT_0x9
	LDI  R26,LOW(152)
	RCALL SUBOPT_0x9
	LDI  R26,LOW(7)
	RCALL _lcd_write_index_register
	LDI  R26,LOW(307)
	LDI  R27,HIGH(307)
	RCALL _lcd_write_wdr
	LDI  R26,LOW(43)
	RCALL _lcd_write_index_register
	LDI  R26,LOW(13)
	RCALL SUBOPT_0x6
	RCALL _lcd_clear_screen
	RET
_lcd_write_pixel:
	ST   -Y,R27
	ST   -Y,R26
;	x -> Y+4
;	y -> Y+2
;	color -> Y+0
	LDI  R26,LOW(32)
	RCALL SUBOPT_0xB
	LDI  R26,LOW(33)
	RCALL SUBOPT_0xC
	LDI  R26,LOW(80)
	RCALL SUBOPT_0xB
	LDI  R26,LOW(81)
	RCALL SUBOPT_0xB
	LDI  R26,LOW(82)
	RCALL SUBOPT_0xC
	LDI  R26,LOW(83)
	RCALL SUBOPT_0xC
	LDI  R26,LOW(34)
	RCALL _lcd_write_index_register
	LD   R26,Y
	LDD  R27,Y+1
	RCALL _lcd_write_wdr
_0x2000002:
	ADIW R28,6
	RET
;	x -> Y+4
;	y -> Y+2
;	pixel -> R16,R17
_lcd_draw_line:
	ST   -Y,R27
	ST   -Y,R26
	SBIW R28,2
	CALL __SAVELOCR6
;	x0 -> Y+16
;	y0 -> Y+14
;	x1 -> Y+12
;	y1 -> Y+10
;	color -> Y+8
;	dy -> R16,R17
;	dx -> R18,R19
;	stepx -> R20,R21
;	stepy -> Y+6
	LDD  R26,Y+14
	LDD  R27,Y+14+1
	LDD  R30,Y+10
	LDD  R31,Y+10+1
	SUB  R30,R26
	SBC  R31,R27
	MOVW R16,R30
	LDD  R26,Y+16
	LDD  R27,Y+16+1
	LDD  R30,Y+12
	LDD  R31,Y+12+1
	SUB  R30,R26
	SBC  R31,R27
	MOVW R18,R30
	TST  R17
	BRPL _0x2D
	MOVW R30,R16
	CALL __ANEGW1
	MOVW R16,R30
	LDI  R30,LOW(65535)
	LDI  R31,HIGH(65535)
	RJMP _0x66
_0x2D:
	LDI  R30,LOW(1)
	LDI  R31,HIGH(1)
_0x66:
	STD  Y+6,R30
	STD  Y+6+1,R31
	TST  R19
	BRPL _0x2F
	MOVW R30,R18
	CALL __ANEGW1
	MOVW R18,R30
	__GETWRN 20,21,-1
	RJMP _0x30
_0x2F:
	__GETWRN 20,21,1
_0x30:
	LSL  R16
	ROL  R17
	LSL  R18
	ROL  R19
	LDD  R30,Y+16
	LDD  R31,Y+16+1
	ST   -Y,R31
	ST   -Y,R30
	LDD  R30,Y+16
	LDD  R31,Y+16+1
	ST   -Y,R31
	ST   -Y,R30
	LDD  R26,Y+12
	LDD  R27,Y+12+1
	RCALL _lcd_write_pixel
	__CPWRR 16,17,18,19
	BRGE _0x31
	SBIW R28,2
;	x0 -> Y+18
;	y0 -> Y+16
;	x1 -> Y+14
;	y1 -> Y+12
;	color -> Y+10
;	stepy -> Y+8
;	fraction -> Y+0
	MOVW R30,R18
	ASR  R31
	ROR  R30
	MOVW R26,R30
	MOVW R30,R16
	SUB  R30,R26
	SBC  R31,R27
	ST   Y,R30
	STD  Y+1,R31
_0x32:
	LDD  R30,Y+14
	LDD  R31,Y+14+1
	LDD  R26,Y+18
	LDD  R27,Y+18+1
	CP   R30,R26
	CPC  R31,R27
	BREQ _0x34
	LDD  R26,Y+1
	TST  R26
	BRMI _0x35
	RCALL SUBOPT_0xD
	LD   R30,Y
	LDD  R31,Y+1
	SUB  R30,R18
	SBC  R31,R19
	ST   Y,R30
	STD  Y+1,R31
_0x35:
	RCALL SUBOPT_0xE
	MOVW R30,R16
	RCALL SUBOPT_0xF
	RJMP _0x32
_0x34:
	RJMP _0x67
_0x31:
	SBIW R28,2
;	x0 -> Y+18
;	y0 -> Y+16
;	x1 -> Y+14
;	y1 -> Y+12
;	color -> Y+10
;	stepy -> Y+8
;	fraction -> Y+0
	MOVW R30,R16
	ASR  R31
	ROR  R30
	MOVW R26,R30
	MOVW R30,R18
	SUB  R30,R26
	SBC  R31,R27
	ST   Y,R30
	STD  Y+1,R31
_0x37:
	LDD  R30,Y+12
	LDD  R31,Y+12+1
	LDD  R26,Y+16
	LDD  R27,Y+16+1
	CP   R30,R26
	CPC  R31,R27
	BREQ _0x39
	LDD  R26,Y+1
	TST  R26
	BRMI _0x3A
	RCALL SUBOPT_0xE
	LD   R30,Y
	LDD  R31,Y+1
	SUB  R30,R16
	SBC  R31,R17
	ST   Y,R30
	STD  Y+1,R31
_0x3A:
	RCALL SUBOPT_0xD
	MOVW R30,R18
	RCALL SUBOPT_0xF
	RJMP _0x37
_0x39:
_0x67:
	ADIW R28,2
	CALL __LOADLOCR6
	ADIW R28,18
	RET
_lcd_draw_rectangle:
	ST   -Y,R27
	ST   -Y,R26
;	x0 -> Y+9
;	y0 -> Y+7
;	x1 -> Y+5
;	y1 -> Y+3
;	fill -> Y+2
;	color -> Y+0
	LDD  R30,Y+2
	CPI  R30,0
	BREQ _0x3B
	SBIW R28,3
;	x0 -> Y+12
;	y0 -> Y+10
;	x1 -> Y+8
;	y1 -> Y+6
;	fill -> Y+5
;	color -> Y+3
;	counter_x -> Y+1
;	counter_y -> Y+0
	LDI  R26,LOW(32)
	RCALL SUBOPT_0x10
	LDI  R26,LOW(33)
	RCALL SUBOPT_0x11
	LDI  R26,LOW(80)
	RCALL SUBOPT_0x10
	LDI  R26,LOW(81)
	RCALL _lcd_write_index_register
	LDD  R26,Y+8
	LDD  R27,Y+8+1
	RCALL _lcd_write_wdr
	LDI  R26,LOW(82)
	RCALL SUBOPT_0x11
	LDI  R26,LOW(83)
	RCALL _lcd_write_index_register
	LDD  R26,Y+6
	LDD  R27,Y+6+1
	RCALL _lcd_write_wdr
	LDI  R26,LOW(34)
	RCALL _lcd_write_index_register
	LDD  R30,Y+10
	ST   Y,R30
_0x3D:
	LDD  R30,Y+6
	LDD  R31,Y+6+1
	LD   R26,Y
	LDI  R27,0
	CP   R30,R26
	CPC  R31,R27
	BRLO _0x3E
	LDD  R30,Y+12
	LDD  R31,Y+12+1
	STD  Y+1,R30
	STD  Y+1+1,R31
_0x40:
	LDD  R30,Y+8
	LDD  R31,Y+8+1
	LDD  R26,Y+1
	LDD  R27,Y+1+1
	CP   R30,R26
	CPC  R31,R27
	BRLO _0x41
	LDD  R26,Y+3
	LDD  R27,Y+3+1
	RCALL _lcd_write_wdr
	LDD  R30,Y+1
	LDD  R31,Y+1+1
	ADIW R30,1
	STD  Y+1,R30
	STD  Y+1+1,R31
	RJMP _0x40
_0x41:
	LD   R30,Y
	SUBI R30,-LOW(1)
	ST   Y,R30
	RJMP _0x3D
_0x3E:
	ADIW R28,3
	RJMP _0x42
_0x3B:
	RCALL SUBOPT_0x12
	RCALL SUBOPT_0x12
	RCALL SUBOPT_0x12
	RCALL SUBOPT_0x13
	RCALL SUBOPT_0x14
	RCALL SUBOPT_0x12
	RCALL SUBOPT_0x12
	RCALL SUBOPT_0x12
	RCALL SUBOPT_0x14
	RCALL SUBOPT_0x15
	RCALL SUBOPT_0x12
	LDD  R26,Y+8
	LDD  R27,Y+8+1
	RCALL _lcd_draw_line
	RCALL SUBOPT_0x12
	RCALL SUBOPT_0x15
	RCALL SUBOPT_0x13
	LDD  R26,Y+8
	LDD  R27,Y+8+1
	RCALL _lcd_draw_line
_0x42:
	ADIW R28,11
	RET
_lcd_draw_circle:
	ST   -Y,R27
	ST   -Y,R26
	CALL __SAVELOCR6
;	x0 -> Y+13
;	y0 -> Y+11
;	radius -> Y+9
;	fill -> Y+8
;	color -> Y+6
;	x_offset -> R16,R17
;	y_offset -> R18,R19
;	error -> R20,R21
	__GETWRN 16,17,0
	__GETWRS 18,19,9
	LDD  R26,Y+9
	LDD  R27,Y+9+1
	LDI  R30,LOW(1)
	LDI  R31,HIGH(1)
	SUB  R30,R26
	SBC  R31,R27
	MOVW R20,R30
_0x44:
	LDD  R30,Y+8
	CPI  R30,0
	BREQ _0x46
	RCALL SUBOPT_0x16
	MOVW R30,R18
	RCALL SUBOPT_0x17
	RCALL SUBOPT_0x18
	RCALL SUBOPT_0x19
	RCALL SUBOPT_0x1A
	RCALL SUBOPT_0x16
	RCALL SUBOPT_0x1B
	RCALL SUBOPT_0x18
	LDD  R30,Y+17
	LDD  R31,Y+17+1
	SUB  R30,R18
	SBC  R31,R19
	ST   -Y,R31
	ST   -Y,R30
	RCALL SUBOPT_0x1A
	RCALL SUBOPT_0x1B
	MOVW R30,R16
	RCALL SUBOPT_0x17
	RCALL SUBOPT_0x19
	RCALL SUBOPT_0x18
	RCALL SUBOPT_0x1A
	RCALL SUBOPT_0x1B
	RCALL SUBOPT_0x16
	RCALL SUBOPT_0x19
	LDD  R30,Y+17
	LDD  R31,Y+17+1
	SUB  R30,R16
	SBC  R31,R17
	ST   -Y,R31
	ST   -Y,R30
	RCALL SUBOPT_0x1A
	RJMP _0x47
_0x46:
	RCALL SUBOPT_0x1C
	RCALL SUBOPT_0x1D
	RCALL SUBOPT_0x1E
	RCALL SUBOPT_0x1D
	RCALL SUBOPT_0x1C
	RCALL SUBOPT_0x1E
	RCALL SUBOPT_0x16
	RCALL SUBOPT_0x1D
	RCALL SUBOPT_0x1E
	RCALL SUBOPT_0x1B
	RCALL SUBOPT_0x1C
	RCALL SUBOPT_0x1E
	RCALL SUBOPT_0x1D
	RCALL SUBOPT_0x16
	RCALL SUBOPT_0x1E
	RCALL SUBOPT_0x1C
	RCALL SUBOPT_0x1B
	RCALL SUBOPT_0x1E
	RCALL SUBOPT_0x16
	RCALL SUBOPT_0x1B
	RCALL SUBOPT_0x1E
	RCALL SUBOPT_0x1B
	RCALL SUBOPT_0x16
	RCALL SUBOPT_0x1E
_0x47:
	TST  R21
	BRPL _0x48
	MOVW R30,R16
	__ADDWRN 16,17,1
	LSL  R30
	ROL  R31
	ADIW R30,3
	RJMP _0x68
_0x48:
	PUSH R17
	PUSH R16
	__ADDWRN 16,17,1
	MOVW R30,R18
	__SUBWRN 18,19,1
	POP  R26
	POP  R27
	CALL __SWAPW12
	SUB  R30,R26
	SBC  R31,R27
	LSL  R30
	ROL  R31
	ADIW R30,5
_0x68:
	__ADDWRR 20,21,30,31
	__CPWRR 18,19,16,17
	BRLT _0x45
	RJMP _0x44
_0x45:
	CALL __LOADLOCR6
	ADIW R28,15
	RET
;	x -> Y+12
;	y -> Y+10
;	*pointer -> Y+8
;	counter -> Y+4
;	compare_value -> Y+0
_lcd_gotoxy:
	ST   -Y,R26
;	x -> Y+1
;	y -> Y+0
	LDD  R26,Y+1
	CPI  R26,LOW(0x29)
	BRSH _0x4E
	LD   R26,Y
	CPI  R26,LOW(0x10)
	BRLO _0x4D
_0x4E:
	LDD  R26,Y+1
	LDI  R27,0
	LDI  R30,LOW(40)
	LDI  R31,HIGH(40)
	CALL __DIVW21
	LD   R26,Y
	ADD  R30,R26
	ST   Y,R30
	LDD  R26,Y+1
	CLR  R27
	LDI  R30,LOW(40)
	LDI  R31,HIGH(40)
	CALL __MODW21
	STD  Y+1,R30
_0x4D:
	LDD  R5,Y+1
	LDD  R4,Y+0
_0x2000001:
	ADIW R28,2
	RET
_lcd_putchar:
	ST   -Y,R27
	ST   -Y,R26
	CALL __SAVELOCR6
;	character -> Y+11
;	forground_color -> Y+9
;	background_color_activation -> Y+8
;	background_color -> Y+6
;	temporary_color -> R16,R17
;	width_counter -> R19
;	length_counter -> R18
;	character_segment_data -> R21
	LDI  R18,LOW(0)
_0x51:
	CPI  R18,16
	BRSH _0x52
	LDD  R30,Y+11
	LDI  R31,0
	SBIW R30,32
	CALL __LSLW4
	SUBI R30,LOW(-_font8x16*2)
	SBCI R31,HIGH(-_font8x16*2)
	MOVW R26,R30
	RCALL SUBOPT_0x1F
	LPM  R21,Z
	LDI  R19,LOW(0)
_0x54:
	CPI  R19,8
	BRSH _0x55
	MOV  R30,R19
	LDI  R26,LOW(128)
	CALL __LSRB12
	AND  R30,R21
	BREQ _0x56
	RCALL SUBOPT_0x20
	ST   -Y,R31
	ST   -Y,R30
	LDD  R26,Y+13
	LDD  R27,Y+13+1
	RJMP _0x69
_0x56:
	LDD  R30,Y+8
	CPI  R30,0
	BREQ _0x58
	RCALL _lcd_read_rdr
	MOVW R16,R30
	RCALL _lcd_read_rdr
	MOVW R16,R30
	MOVW R26,R16
	RCALL _lcd_write_wdr
	RJMP _0x59
_0x58:
	RCALL SUBOPT_0x20
	ST   -Y,R31
	ST   -Y,R30
	LDD  R26,Y+10
	LDD  R27,Y+10+1
_0x69:
	RCALL _lcd_write_pixel
_0x59:
	SUBI R19,-1
	RJMP _0x54
_0x55:
	SUBI R18,-1
	RJMP _0x51
_0x52:
	INC  R5
	LDI  R30,LOW(40)
	CP   R30,R5
	BRSH _0x5A
	CLR  R5
	INC  R4
	LDI  R30,LOW(15)
	CP   R30,R4
	BRSH _0x5B
	CLR  R4
_0x5B:
_0x5A:
	CALL __LOADLOCR6
	ADIW R28,12
	RET
_lcd_putsf:
	ST   -Y,R27
	ST   -Y,R26
;	*string -> Y+5
;	forground_color -> Y+3
;	background_color_activation -> Y+2
;	background_color -> Y+0
_0x5C:
	LDD  R30,Y+5
	LDD  R31,Y+5+1
	LPM  R30,Z
	CPI  R30,0
	BREQ _0x5E
	LDD  R30,Y+5
	LDD  R31,Y+5+1
	ADIW R30,1
	STD  Y+5,R30
	STD  Y+5+1,R31
	SBIW R30,1
	LPM  R30,Z
	ST   -Y,R30
	LDD  R30,Y+4
	LDD  R31,Y+4+1
	ST   -Y,R31
	ST   -Y,R30
	LDD  R30,Y+5
	ST   -Y,R30
	LDD  R26,Y+4
	LDD  R27,Y+4+1
	RCALL _lcd_putchar
	RJMP _0x5C
_0x5E:
	ADIW R28,7
	RET
;	*string -> Y+5
;	forground_color -> Y+3
;	background_color_activation -> Y+2
;	background_color -> Y+0
;
;void main(void)
; 0000 002E {
_main:
; 0000 002F // Port B initialization
; 0000 0030 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=Out Func1=Out Func0=Out
; 0000 0031 // State7=T State6=T State5=T State4=T State3=T State2=0 State1=0 State0=0
; 0000 0032 PORTB=0x00;
	LDI  R30,LOW(0)
	OUT  0x18,R30
; 0000 0033 DDRB=0x07;
	LDI  R30,LOW(7)
	OUT  0x17,R30
; 0000 0034 
; 0000 0035  lcd_init();
	RCALL _lcd_init
; 0000 0036  lcd_background_color(GREEN);
	LDI  R26,LOW(2016)
	LDI  R27,HIGH(2016)
	RCALL _lcd_background_color
; 0000 0037 while (1)
_0x62:
; 0000 0038       {
; 0000 0039       lcd_clear_screen();
	RCALL _lcd_clear_screen
; 0000 003A       lcd_gotoxy(10,5);
	LDI  R30,LOW(10)
	ST   -Y,R30
	LDI  R26,LOW(5)
	RCALL _lcd_gotoxy
; 0000 003B       lcd_putsf(" TFT LCD 2.8' ",0x0000,0,RED);
	__POINTW1FN _0x0,0
	RCALL SUBOPT_0x21
; 0000 003C       lcd_gotoxy(7,7);
	LDI  R30,LOW(7)
	ST   -Y,R30
	LDI  R26,LOW(7)
	RCALL _lcd_gotoxy
; 0000 003D       lcd_putsf(" WWW.NAMINIC.COM ",0x0000,0,RED);
	__POINTW1FN _0x0,15
	RCALL SUBOPT_0x21
; 0000 003E       delay_ms(2000);
	LDI  R26,LOW(2000)
	LDI  R27,HIGH(2000)
	CALL _delay_ms
; 0000 003F       lcd_clear_screen();
	RCALL _lcd_clear_screen
; 0000 0040       lcd_background_color(BLACK);
	LDI  R26,LOW(0)
	LDI  R27,0
	RCALL _lcd_background_color
; 0000 0041       lcd_draw_line(5,5,50,50,0xFFFF);
	LDI  R30,LOW(5)
	LDI  R31,HIGH(5)
	ST   -Y,R31
	ST   -Y,R30
	ST   -Y,R31
	ST   -Y,R30
	LDI  R30,LOW(50)
	LDI  R31,HIGH(50)
	ST   -Y,R31
	ST   -Y,R30
	ST   -Y,R31
	ST   -Y,R30
	LDI  R26,LOW(65535)
	LDI  R27,HIGH(65535)
	RCALL _lcd_draw_line
; 0000 0042       lcd_draw_rectangle(30,30,80,80,0,0XFFFF);
	LDI  R30,LOW(30)
	LDI  R31,HIGH(30)
	ST   -Y,R31
	ST   -Y,R30
	ST   -Y,R31
	ST   -Y,R30
	LDI  R30,LOW(80)
	LDI  R31,HIGH(80)
	ST   -Y,R31
	ST   -Y,R30
	RCALL SUBOPT_0x22
	RCALL _lcd_draw_rectangle
; 0000 0043       lcd_draw_circle(150,150,25,0,0xffff);
	LDI  R30,LOW(150)
	LDI  R31,HIGH(150)
	ST   -Y,R31
	ST   -Y,R30
	ST   -Y,R31
	ST   -Y,R30
	LDI  R30,LOW(25)
	LDI  R31,HIGH(25)
	RCALL SUBOPT_0x22
	RCALL _lcd_draw_circle
; 0000 0044       delay_ms(2000);
	LDI  R26,LOW(2000)
	LDI  R27,HIGH(2000)
	CALL _delay_ms
; 0000 0045       }
	RJMP _0x62
; 0000 0046 }
_0x65:
	RJMP _0x65

	.CSEG
;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0x0:
	OUT  0x1B,R30
	LD   R30,Y
	OUT  0x15,R30
	CBI  0x12,3
	SBI  0x12,3
	SBI  0x12,0
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:56 WORDS
SUBOPT_0x1:
	SBIW R28,4
	LDI  R26,LOW(32)
	RCALL _lcd_write_index_register
	LDI  R26,LOW(0)
	LDI  R27,0
	RCALL _lcd_write_wdr
	LDI  R26,LOW(33)
	RCALL _lcd_write_index_register
	LDI  R26,LOW(0)
	LDI  R27,0
	RCALL _lcd_write_wdr
	LDI  R26,LOW(80)
	RCALL _lcd_write_index_register
	LDI  R26,LOW(0)
	LDI  R27,0
	RCALL _lcd_write_wdr
	LDI  R26,LOW(81)
	RCALL _lcd_write_index_register
	LDI  R26,LOW(239)
	LDI  R27,0
	RCALL _lcd_write_wdr
	LDI  R26,LOW(82)
	RCALL _lcd_write_index_register
	LDI  R26,LOW(0)
	LDI  R27,0
	RCALL _lcd_write_wdr
	LDI  R26,LOW(83)
	RCALL _lcd_write_index_register
	LDI  R26,LOW(319)
	LDI  R27,HIGH(319)
	RCALL _lcd_write_wdr
	LDI  R26,LOW(34)
	RCALL _lcd_write_index_register
	LDI  R30,LOW(0)
	CALL __CLRD1S0
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
SUBOPT_0x2:
	CALL __GETD2S0
	__CPD2N 0x12C00
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
SUBOPT_0x3:
	CALL __GETD1S0
	__SUBD1N -1
	CALL __PUTD1S0
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
SUBOPT_0x4:
	LDD  R26,Y+4
	LDD  R27,Y+4+1
	RJMP _lcd_write_wdr

;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0x5:
	LDI  R26,LOW(1)
	LDI  R27,0
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 39 TIMES, CODE SIZE REDUCTION:111 WORDS
SUBOPT_0x6:
	LDI  R27,0
	RJMP _lcd_write_wdr

;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
SUBOPT_0x7:
	LDI  R26,LOW(50)
	LDI  R27,0
	JMP  _delay_ms

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0x8:
	RCALL _lcd_write_index_register
	LDI  R26,LOW(1792)
	LDI  R27,HIGH(1792)
	RJMP _lcd_write_wdr

;OPTIMIZER ADDED SUBROUTINE, CALLED 28 TIMES, CODE SIZE REDUCTION:78 WORDS
SUBOPT_0x9:
	RCALL _lcd_write_index_register
	LDI  R26,LOW(0)
	RJMP SUBOPT_0x6

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0xA:
	LDI  R26,LOW(17)
	RCALL _lcd_write_index_register
	LDI  R26,LOW(7)
	RJMP SUBOPT_0x6

;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0xB:
	RCALL _lcd_write_index_register
	RJMP SUBOPT_0x4

;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
SUBOPT_0xC:
	RCALL _lcd_write_index_register
	LDD  R26,Y+2
	LDD  R27,Y+2+1
	RJMP _lcd_write_wdr

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
SUBOPT_0xD:
	LDD  R30,Y+8
	LDD  R31,Y+8+1
	LDD  R26,Y+16
	LDD  R27,Y+16+1
	ADD  R30,R26
	ADC  R31,R27
	STD  Y+16,R30
	STD  Y+16+1,R31
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
SUBOPT_0xE:
	MOVW R30,R20
	LDD  R26,Y+18
	LDD  R27,Y+18+1
	ADD  R30,R26
	ADC  R31,R27
	STD  Y+18,R30
	STD  Y+18+1,R31
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:13 WORDS
SUBOPT_0xF:
	LD   R26,Y
	LDD  R27,Y+1
	ADD  R30,R26
	ADC  R31,R27
	ST   Y,R30
	STD  Y+1,R31
	LDD  R30,Y+18
	LDD  R31,Y+18+1
	ST   -Y,R31
	ST   -Y,R30
	LDD  R30,Y+18
	LDD  R31,Y+18+1
	ST   -Y,R31
	ST   -Y,R30
	LDD  R26,Y+14
	LDD  R27,Y+14+1
	RJMP _lcd_write_pixel

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0x10:
	RCALL _lcd_write_index_register
	LDD  R26,Y+12
	LDD  R27,Y+12+1
	RJMP _lcd_write_wdr

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0x11:
	RCALL _lcd_write_index_register
	LDD  R26,Y+10
	LDD  R27,Y+10+1
	RJMP _lcd_write_wdr

;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
SUBOPT_0x12:
	LDD  R30,Y+9
	LDD  R31,Y+9+1
	ST   -Y,R31
	ST   -Y,R30
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
SUBOPT_0x13:
	LDD  R30,Y+13
	LDD  R31,Y+13+1
	ST   -Y,R31
	ST   -Y,R30
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
SUBOPT_0x14:
	LDD  R26,Y+8
	LDD  R27,Y+8+1
	RCALL _lcd_draw_line
	LDD  R30,Y+5
	LDD  R31,Y+5+1
	ST   -Y,R31
	ST   -Y,R30
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0x15:
	LDD  R30,Y+5
	LDD  R31,Y+5+1
	ST   -Y,R31
	ST   -Y,R30
	RJMP SUBOPT_0x13

;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
SUBOPT_0x16:
	LDD  R30,Y+13
	LDD  R31,Y+13+1
	SUB  R30,R16
	SBC  R31,R17
	ST   -Y,R31
	ST   -Y,R30
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0x17:
	LDD  R26,Y+13
	LDD  R27,Y+13+1
	ADD  R30,R26
	ADC  R31,R27
	ST   -Y,R31
	ST   -Y,R30
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
SUBOPT_0x18:
	MOVW R30,R16
	LDD  R26,Y+17
	LDD  R27,Y+17+1
	ADD  R30,R26
	ADC  R31,R27
	ST   -Y,R31
	ST   -Y,R30
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
SUBOPT_0x19:
	MOVW R30,R18
	LDD  R26,Y+17
	LDD  R27,Y+17+1
	ADD  R30,R26
	ADC  R31,R27
	ST   -Y,R31
	ST   -Y,R30
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
SUBOPT_0x1A:
	LDD  R26,Y+14
	LDD  R27,Y+14+1
	RJMP _lcd_draw_line

;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
SUBOPT_0x1B:
	LDD  R30,Y+13
	LDD  R31,Y+13+1
	SUB  R30,R18
	SBC  R31,R19
	ST   -Y,R31
	ST   -Y,R30
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
SUBOPT_0x1C:
	LDD  R30,Y+13
	LDD  R31,Y+13+1
	ADD  R30,R16
	ADC  R31,R17
	ST   -Y,R31
	ST   -Y,R30
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
SUBOPT_0x1D:
	LDD  R30,Y+13
	LDD  R31,Y+13+1
	ADD  R30,R18
	ADC  R31,R19
	ST   -Y,R31
	ST   -Y,R30
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
SUBOPT_0x1E:
	LDD  R26,Y+10
	LDD  R27,Y+10+1
	RJMP _lcd_write_pixel

;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
SUBOPT_0x1F:
	MOV  R30,R18
	LDI  R31,0
	ADD  R30,R26
	ADC  R31,R27
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:15 WORDS
SUBOPT_0x20:
	MOV  R26,R5
	LDI  R30,LOW(8)
	MUL  R30,R26
	MOVW R30,R0
	MOVW R26,R30
	MOV  R30,R19
	LDI  R31,0
	ADD  R30,R26
	ADC  R31,R27
	ST   -Y,R31
	ST   -Y,R30
	MOV  R26,R4
	LDI  R30,LOW(16)
	MUL  R30,R26
	MOVW R30,R0
	MOVW R26,R30
	RJMP SUBOPT_0x1F

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
SUBOPT_0x21:
	ST   -Y,R31
	ST   -Y,R30
	LDI  R30,LOW(0)
	LDI  R31,HIGH(0)
	ST   -Y,R31
	ST   -Y,R30
	ST   -Y,R30
	LDI  R26,LOW(31)
	LDI  R27,0
	RJMP _lcd_putsf

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0x22:
	ST   -Y,R31
	ST   -Y,R30
	LDI  R30,LOW(0)
	ST   -Y,R30
	LDI  R26,LOW(65535)
	LDI  R27,HIGH(65535)
	RET


	.CSEG
_delay_ms:
	adiw r26,0
	breq __delay_ms1
__delay_ms0:
	__DELAY_USW 0x7D0
	wdr
	sbiw r26,1
	brne __delay_ms0
__delay_ms1:
	ret

__ANEGW1:
	NEG  R31
	NEG  R30
	SBCI R31,0
	RET

__LSRB12:
	TST  R30
	MOV  R0,R30
	MOV  R30,R26
	BREQ __LSRB12R
__LSRB12L:
	LSR  R30
	DEC  R0
	BRNE __LSRB12L
__LSRB12R:
	RET

__LSLW4:
	LSL  R30
	ROL  R31
__LSLW3:
	LSL  R30
	ROL  R31
__LSLW2:
	LSL  R30
	ROL  R31
	LSL  R30
	ROL  R31
	RET

__ASRW8:
	MOV  R30,R31
	CLR  R31
	SBRC R30,7
	SER  R31
	RET

__DIVW21U:
	CLR  R0
	CLR  R1
	LDI  R25,16
__DIVW21U1:
	LSL  R26
	ROL  R27
	ROL  R0
	ROL  R1
	SUB  R0,R30
	SBC  R1,R31
	BRCC __DIVW21U2
	ADD  R0,R30
	ADC  R1,R31
	RJMP __DIVW21U3
__DIVW21U2:
	SBR  R26,1
__DIVW21U3:
	DEC  R25
	BRNE __DIVW21U1
	MOVW R30,R26
	MOVW R26,R0
	RET

__DIVW21:
	RCALL __CHKSIGNW
	RCALL __DIVW21U
	BRTC __DIVW211
	RCALL __ANEGW1
__DIVW211:
	RET

__MODW21:
	CLT
	SBRS R27,7
	RJMP __MODW211
	COM  R26
	COM  R27
	ADIW R26,1
	SET
__MODW211:
	SBRC R31,7
	RCALL __ANEGW1
	RCALL __DIVW21U
	MOVW R30,R26
	BRTC __MODW212
	RCALL __ANEGW1
__MODW212:
	RET

__CHKSIGNW:
	CLT
	SBRS R31,7
	RJMP __CHKSW1
	RCALL __ANEGW1
	SET
__CHKSW1:
	SBRS R27,7
	RJMP __CHKSW2
	COM  R26
	COM  R27
	ADIW R26,1
	BLD  R0,0
	INC  R0
	BST  R0,0
__CHKSW2:
	RET

__GETD1S0:
	LD   R30,Y
	LDD  R31,Y+1
	LDD  R22,Y+2
	LDD  R23,Y+3
	RET

__GETD2S0:
	LD   R26,Y
	LDD  R27,Y+1
	LDD  R24,Y+2
	LDD  R25,Y+3
	RET

__PUTD1S0:
	ST   Y,R30
	STD  Y+1,R31
	STD  Y+2,R22
	STD  Y+3,R23
	RET

__CLRD1S0:
	ST   Y,R30
	STD  Y+1,R30
	STD  Y+2,R30
	STD  Y+3,R30
	RET

__SWAPW12:
	MOV  R1,R27
	MOV  R27,R31
	MOV  R31,R1

__SWAPB12:
	MOV  R1,R26
	MOV  R26,R30
	MOV  R30,R1
	RET

__SAVELOCR6:
	ST   -Y,R21
__SAVELOCR5:
	ST   -Y,R20
__SAVELOCR4:
	ST   -Y,R19
__SAVELOCR3:
	ST   -Y,R18
__SAVELOCR2:
	ST   -Y,R17
	ST   -Y,R16
	RET

__LOADLOCR6:
	LDD  R21,Y+5
__LOADLOCR5:
	LDD  R20,Y+4
__LOADLOCR4:
	LDD  R19,Y+3
__LOADLOCR3:
	LDD  R18,Y+2
__LOADLOCR2:
	LDD  R17,Y+1
	LD   R16,Y
	RET

;END OF CODE MARKER
__END_OF_CODE:
